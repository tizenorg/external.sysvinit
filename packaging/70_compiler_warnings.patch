Purpose: Get rid of some signed/unsigned warnings.
Authour: Petter Reinholdtsen
Fixes:   -
Status:  Should be sent upstream.

--- a/src/bootlogd.c
+++ b/src/bootlogd.c
@@ -136,7 +136,7 @@ static int findtty(char *res, const char
 		if (!S_ISCHR(st.st_mode))
 			continue;
 		if (st.st_rdev == dev) {
-			if (strlen(ent->d_name) + strlen(startdir) + 1 >= rlen) {
+			if ((int)strlen(ent->d_name) + (int)strlen(startdir) + 1 >= rlen) {
 				fprintf(stderr, "bootlogd: console device name too long\n");
 				closedir(dir);
 				chdir(olddir);
@@ -370,7 +370,7 @@ void writelog(FILE *fp, unsigned char *p
 				break;
 			case '\t':
 				line.pos += (line.pos / 8 + 1) * 8;
-				if (line.pos >= sizeof(line.buf))
+				if (line.pos >= (int)sizeof(line.buf))
 					line.pos = sizeof(line.buf) - 1;
 				break;
 			case  32 ... 127:
@@ -386,7 +386,7 @@ void writelog(FILE *fp, unsigned char *p
 		len--;
 
 		tlen = strlen(tmp);
-		if (tlen && (line.pos + tlen < sizeof(line.buf))) {
+		if (tlen && (line.pos + tlen < (int)sizeof(line.buf))) {
 			memcpy(line.buf + line.pos, tmp, tlen);
 			line.pos += tlen;
 		}
@@ -659,7 +659,7 @@ int main(int argc, char **argv)
 		else
 			todo = endptr - outptr;
 		if (fp && todo)
-			writelog(fp, outptr, todo);
+			writelog(fp, (unsigned char *)outptr, todo);
 	}
 
 	if (fp) {
--- a/src/init.c
+++ b/src/init.c
@@ -1256,7 +1256,7 @@ void read_inittab(void)
 	strncpy(ch->id, id, sizeof(utproto.ut_id) + 1); /* Hack for different libs. */
 	strncpy(ch->process, process, sizeof(ch->process) - 1);
 	if (rlevel[0]) {
-		for(f = 0; f < sizeof(rlevel) - 1 && rlevel[f]; f++) {
+		for(f = 0; f < (int)sizeof(rlevel) - 1 && rlevel[f]; f++) {
 			ch->rlevel[f] = rlevel[f];
 			if (ch->rlevel[f] == 's') ch->rlevel[f] = 'S';
 		}
--- a/src/last.c
+++ b/src/last.c
@@ -322,7 +322,7 @@ int dns_lookup(char *result, int size, i
 	 *
 	 *	Ugly.
 	 */
-	if (a[0] == 0 && a[1] == 0 && a[2] == htonl (0xffff))
+	if (a[0] == 0 && a[1] == 0 && a[2] == (int32_t)htonl (0xffff))
 		mapped = 1;
 	topnibble = ntohl((unsigned int)a[0]) >> 28;
 
@@ -453,7 +453,7 @@ int list(struct utmp *p, time_t t, int w
 		r = dns_lookup(domain, sizeof(domain), useip, p->ut_addr_v6);
 	if (r < 0) {
 		len = UT_HOSTSIZE;
-		if (len >= sizeof(domain)) len = sizeof(domain) - 1;
+		if (len >= (int)sizeof(domain)) len = sizeof(domain) - 1;
 		domain[0] = 0;
 		strncat(domain, p->ut_host, len);
 	}
--- a/src/shutdown.c
+++ b/src/shutdown.c
@@ -141,7 +141,7 @@ int init_setenv(char *name, char *value)
 	nl = strlen(name);
 	vl = value ? strlen(value) : 0;
 
-	if (nl + vl + 3 >= sizeof(request.i.data))
+	if (nl + vl + 3 >= (int)sizeof(request.i.data))
 		return -1;
 
 	memcpy(request.i.data, name, nl);
--- a/src/sulogin.c
+++ b/src/sulogin.c
@@ -282,7 +282,7 @@ char *getpasswd(char *crypted)
 	if (read(0, pass, sizeof(pass) - 1) <= 0)
 		ret = NULL;
 	else {
-		for(i = 0; i < sizeof(pass) && pass[i]; i++)
+		for(i = 0; i < (int)sizeof(pass) && pass[i]; i++)
 			if (pass[i] == '\r' || pass[i] == '\n') {
 				pass[i] = 0;
 				break;
